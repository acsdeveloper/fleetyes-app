name: Build React Native APK

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to build for'
        required: true
        type: environment
env:
    FLEETBASE_KEY: ${{ secrets.FLEETBASE_KEY }}
    GOOGLE_MAPS_KEY: ${{ secrets.GOOGLE_MAPS_KEY || '' }}
    ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD || '' }}

jobs:
  android_build:
    name: Build APK
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: Generate google-services.json
        env:
            GOOGLE_SERVICES_JSON: ${{ secrets.STOREFRONT_GOOGLE_SERVICES_JSON }}
        run: |
            echo "$GOOGLE_SERVICES_JSON" > google-services.json
            mkdir -p android/app/src  
            mv google-services.json android/app/src
        
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '22'

      - name: Install dependencies
        run: npm install -g yarn
        
      - name: Enable Corepack
        run: corepack enable

      - name: Activate Yarn 3.6.4
        run: corepack prepare yarn@3.6.4 --activate

      - name: Install dependencies
        run: yarn install --no-immutable

      - name: ☕ Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      # - name: 📲 Setup Android SDK
      #   uses: android-actions/setup-android@v3

      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
            path: ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}  
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
            restore-keys: |
                ${{ runner.os }}-gradle-caches-


      - name: 🔐 Create .env from environment secrets
        run: |
          echo "APP_NAME=${{ vars.APP_NAME }}" >> .env
          echo "APP_IDENTIFIER=${{ vars.APP_IDENTIFIER }}" >> .env
          echo "APP_LINK_PREFIX=${{ vars.APP_LINK_PREFIX }}" >> .env
          echo "FLEETBASE_HOST=${{ vars.FLEETBASE_HOST }}" >> .env
          echo "FLEETBASE_KEY=${{ secrets.FLEETBASE_KEY }}" >> .env
          echo "SOCKETCLUSTER_HOST=${{ vars.SOCKETCLUSTER_HOST }}" >> .env
          echo "SOCKETCLUSTER_PATH=${{ vars.SOCKETCLUSTER_PATH }}" >> .env
          echo "SOCKETCLUSTER_SECURE=${{ vars.SOCKETCLUSTER_SECURE }}" >> .env

      - name: Display .env file
        run: cat .env
        
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew
              
      - name: Build Android
        run: cd android && ./gradlew assembleDebug
        env:
            JVM_OPTS: '-Xmx4096m'

      - name: List APK outputs
        run: find android/app/build/outputs/apk/ -type f -name "*.apk"

      - name: 📤 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-${{ github.event.inputs.environment }}.apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 2